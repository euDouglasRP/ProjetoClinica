/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaprojetoclinicaveterinaria.view;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javaprojetoclinicaveterinaria.dao.AnimalDao;
import javaprojetoclinicaveterinaria.dao.ClienteDao;
import javaprojetoclinicaveterinaria.dao.MedicoDao;
import javaprojetoclinicaveterinaria.dao.ProntuarioDeEntradaDao;
import javaprojetoclinicaveterinaria.dao.ProntuarioDeSaidaDao;
import javaprojetoclinicaveterinaria.model.Cliente;
import javaprojetoclinicaveterinaria.model.Animal;
import javaprojetoclinicaveterinaria.model.Medico;
import javaprojetoclinicaveterinaria.model.ProntuarioDeEntrada;
import javaprojetoclinicaveterinaria.model.ProntuarioDeSaida;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 182210135
 */
public class JanelaPrincipal extends javax.swing.JFrame {

    ArrayList<Cliente> listaCliente;
    ArrayList<Animal> listaAnimal;
    ArrayList<Medico> listaMedico;
    ArrayList<ProntuarioDeEntrada> listaProntuarioDeEntrada;
    ArrayList<ProntuarioDeSaida> listaProntuarioDeSaida;

    /**
     * Creates new form Janela1
     */
    public JanelaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButtonCliente = new javax.swing.JButton();
        jButtonAnimal = new javax.swing.JButton();
        jButtonMedico = new javax.swing.JButton();
        jButtonProntuarioDeEntrada = new javax.swing.JButton();
        jButtonProntuarioDeSaida = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabelIdentificarDeTabela = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePrincipal = new javax.swing.JTable();
        jButtonAtualizarTabela = new javax.swing.JButton();
        jButtonAdicionar = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 115, 29));
        jPanel1.setForeground(new java.awt.Color(255, 115, 29));
        jPanel1.setPreferredSize(new java.awt.Dimension(190, 680));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaprojetoclinicaveterinaria/image/logonew.png"))); // NOI18N

        jButtonCliente.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaprojetoclinicaveterinaria/image/User_Logo.png"))); // NOI18N
        jButtonCliente.setText("Ciente");
        jButtonCliente.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButtonCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClienteActionPerformed(evt);
            }
        });

        jButtonAnimal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonAnimal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaprojetoclinicaveterinaria/image/Animal_Logo.png"))); // NOI18N
        jButtonAnimal.setText("Animal");
        jButtonAnimal.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButtonAnimal.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnimalActionPerformed(evt);
            }
        });

        jButtonMedico.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonMedico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaprojetoclinicaveterinaria/image/User_Md_Logo.png"))); // NOI18N
        jButtonMedico.setText("MÃ©dico");
        jButtonMedico.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButtonMedico.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMedicoActionPerformed(evt);
            }
        });

        jButtonProntuarioDeEntrada.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonProntuarioDeEntrada.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaprojetoclinicaveterinaria/image/prontuarioImage.png"))); // NOI18N
        jButtonProntuarioDeEntrada.setText("Prontuario de Entrada");
        jButtonProntuarioDeEntrada.setHideActionText(true);
        jButtonProntuarioDeEntrada.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonProntuarioDeEntrada.setVerifyInputWhenFocusTarget(false);
        jButtonProntuarioDeEntrada.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonProntuarioDeEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProntuarioDeEntradaActionPerformed(evt);
            }
        });

        jButtonProntuarioDeSaida.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonProntuarioDeSaida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaprojetoclinicaveterinaria/image/prontuarioImage.png"))); // NOI18N
        jButtonProntuarioDeSaida.setText("Prontuario de Saida");
        jButtonProntuarioDeSaida.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonProntuarioDeSaida.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonProntuarioDeSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProntuarioDeSaidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonProntuarioDeSaida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonProntuarioDeEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonMedico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonAnimal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(45, 45, 45)
                .addComponent(jButtonCliente)
                .addGap(18, 18, 18)
                .addComponent(jButtonAnimal)
                .addGap(18, 18, 18)
                .addComponent(jButtonMedico)
                .addGap(26, 26, 26)
                .addComponent(jButtonProntuarioDeEntrada)
                .addGap(18, 18, 18)
                .addComponent(jButtonProntuarioDeSaida)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel2.setText("Clinica Veterinaria New World");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelIdentificarDeTabela.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelIdentificarDeTabela.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaprojetoclinicaveterinaria/image/User_Logo.png"))); // NOI18N
        jLabelIdentificarDeTabela.setText("Cliente");

        jTablePrincipal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablePrincipal);

        jButtonAtualizarTabela.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonAtualizarTabela.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaprojetoclinicaveterinaria/image/Atualizar_Logo.png"))); // NOI18N
        jButtonAtualizarTabela.setText("Atualizar");
        jButtonAtualizarTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtualizarTabelaActionPerformed(evt);
            }
        });

        jButtonAdicionar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaprojetoclinicaveterinaria/image/btAddImage.png"))); // NOI18N
        jButtonAdicionar.setText("Adicionar");
        jButtonAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarActionPerformed(evt);
            }
        });

        jButtonEditar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaprojetoclinicaveterinaria/image/btEditarImage.jpg"))); // NOI18N
        jButtonEditar.setText("Editar");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jButtonExcluir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaprojetoclinicaveterinaria/image/Lixeira_logo.png"))); // NOI18N
        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 913, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jButtonAtualizarTabela)
                        .addGap(45, 45, 45)
                        .addComponent(jButtonAdicionar)
                        .addGap(51, 51, 51)
                        .addComponent(jButtonEditar)
                        .addGap(43, 43, 43)
                        .addComponent(jButtonExcluir))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelIdentificarDeTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelIdentificarDeTabela)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAtualizarTabela)
                    .addComponent(jButtonAdicionar)
                    .addComponent(jButtonEditar)
                    .addComponent(jButtonExcluir))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(307, 307, 307))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel2)
                .addGap(29, 29, 29)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAtualizarTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtualizarTabelaActionPerformed
        try {
            if (jLabelIdentificarDeTabela.getText() == "Cliente") {
                atualizaTabelaCliente();
            } else if (jLabelIdentificarDeTabela.getText() == "Animal") {
                atualizaTabelaAnimal();
            } else if (jLabelIdentificarDeTabela.getText() == "MÃ©dico") {
                atualizaTabelaMedico();
            }else if(jLabelIdentificarDeTabela.getText() == "Prontuario de Entrada"){
                atualizatabelaProntuariodeEntrada();
            }else if(jLabelIdentificarDeTabela.getText() == "Prontuario de Saida"){
                atualizatabelaProntuariodeSaida();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex);
        }
    }//GEN-LAST:event_jButtonAtualizarTabelaActionPerformed

    private void jButtonProntuarioDeEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProntuarioDeEntradaActionPerformed
        try {
            jLabelIdentificarDeTabela.setText("Prontuario de Entrada");
            jLabelIdentificarDeTabela.setIcon(new ImageIcon("C:\\Users\\182210135\\Downloads\\ProjetoClinica-main\\ProjetoClinica-main\\ProjetoClinica-main\\src\\javaprojetoclinicaveterinaria\\image\\prontuarioImage.png"));
            atualizatabelaProntuariodeEntrada();
        } catch (Exception e) {
        }

    }//GEN-LAST:event_jButtonProntuarioDeEntradaActionPerformed

    private void jButtonClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClienteActionPerformed
        try {
            atualizaTabelaCliente();
            jLabelIdentificarDeTabela.setText("Cliente");
            jLabelIdentificarDeTabela.setIcon(new ImageIcon("C:\\Users\\182210135\\Downloads\\ProjetoIntegradorMVCClinica-main\\src\\javaprojetoclinicaveterinaria\\image\\User_Logo.png"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex);
        }
    }//GEN-LAST:event_jButtonClienteActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed

        try {
            if (jLabelIdentificarDeTabela.getText() == "Cliente") {
                editarClienteTela();
            } else if (jLabelIdentificarDeTabela.getText() == "Animal") {
                editarAnimalTela();
            } else if (jLabelIdentificarDeTabela.getText() == "MÃ©dico") {
                editarMedicoTela();
            }else if(jLabelIdentificarDeTabela.getText() == "Prontuario de Entrada"){
                editProntuarioDeEntrada();
            }else if(jLabelIdentificarDeTabela.getText() == "Prontuario de Saida"){
                editProntuarioDeSaida();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e);
        }
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        try {
            if (jLabelIdentificarDeTabela.getText() == "Cliente") {
                excluirClienteTela();
            } else if (jLabelIdentificarDeTabela.getText() == "Animal") {
                excluirAnimalTela();
            } else if (jLabelIdentificarDeTabela.getText() == "MÃ©dico") {
                excluirMedicoTela();
            }else if(jLabelIdentificarDeTabela.getText() == "Prontuario de Entrada"){
                exlcuirProntuarioDeEntrada();
            }else if(jLabelIdentificarDeTabela.getText() == "Prontuario de Saida"){
                excluirProntuarioDeSaida();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e);
        }
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jButtonAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnimalActionPerformed
        try {
            atualizaTabelaAnimal();
            jLabelIdentificarDeTabela.setText("Animal");
            jLabelIdentificarDeTabela.setIcon(new ImageIcon("C:\\Users\\182210135\\Downloads\\ProjetoIntegradorMVCClinica-main\\src\\javaprojetoclinicaveterinaria\\image\\Animal_Logo.png"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex);
        }


    }//GEN-LAST:event_jButtonAnimalActionPerformed

    private void jButtonMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMedicoActionPerformed
        try {
            jLabelIdentificarDeTabela.setText("MÃ©dico");
            jLabelIdentificarDeTabela.setIcon(new ImageIcon("C:\\Users\\182210135\\Downloads\\ProjetoIntegradorMVCClinica-main\\src\\javaprojetoclinicaveterinaria\\image\\User_Md_Logo.png"));
            atualizaTabelaMedico();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e);
        }

    }//GEN-LAST:event_jButtonMedicoActionPerformed

    private void jButtonAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarActionPerformed
        if (jLabelIdentificarDeTabela.getText() == "Cliente") {
            adicionarClienteTela();
        } else if (jLabelIdentificarDeTabela.getText() == "Animal") {
            adicionarAnimalTela();
        } else if (jLabelIdentificarDeTabela.getText() == "MÃ©dico") {
            adicionarMedicoTela();
        }else if(jLabelIdentificarDeTabela.getText() == "Prontuario de Entrada"){
                addProntuarioDeEntrada();
            }else if(jLabelIdentificarDeTabela.getText() == "Prontuario de Saida"){
                addProntuarioDeSaida();
            }
    }//GEN-LAST:event_jButtonAdicionarActionPerformed

    private void jButtonProntuarioDeSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProntuarioDeSaidaActionPerformed
        try {
            jLabelIdentificarDeTabela.setText("Prontuario de Saida");
            jLabelIdentificarDeTabela.setIcon(new ImageIcon("C:\\Users\\182210135\\Downloads\\ProjetoClinica-main\\ProjetoClinica-main\\ProjetoClinica-main\\src\\javaprojetoclinicaveterinaria\\image\\prontuarioImage.png"));
            atualizatabelaProntuariodeSaida();
        } catch (Exception e) {
        }
        
       
    }//GEN-LAST:event_jButtonProntuarioDeSaidaActionPerformed

    public void adicionarMedicoTela() {
        MedicoCadastro med = new MedicoCadastro();
        med.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        med.setVisible(true);
    }

    public void editarMedicoTela() {
        MedicoEditar med = new MedicoEditar();
        med.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        med.setVisible(true);
    }

    public void excluirMedicoTela() {
        MedicoExcluir med = new MedicoExcluir();
        med.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        med.setVisible(true);
    }

    public void adicionarAnimalTela() {
        AnimalCadastro ani = new AnimalCadastro();
        ani.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        ani.setVisible(true);
    }

    public void editarAnimalTela() {
        AnimalEditar ani = new AnimalEditar();
        ani.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        ani.setVisible(true);
    }

    public void excluirAnimalTela() {
        AnimalExcluir ani = new AnimalExcluir();
        ani.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        ani.setVisible(true);
    }

    public void adicionarClienteTela() {
        ClienteCadastro janAdd = new ClienteCadastro();
        janAdd.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        janAdd.setVisible(true);
    }

    public void editarClienteTela() {
        ClienteEditar jan = new ClienteEditar();
        jan.setVisible(true);
        jan.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    }

    public void excluirClienteTela() {
        ClienteExcluir jan = new ClienteExcluir();
        jan.setVisible(true);
        jan.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    }
    public void addProntuarioDeEntrada(){
        ProntuarioDeEntradaCadastro jan = new ProntuarioDeEntradaCadastro();
        jan.setVisible(true);
        jan.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    }
    public void editProntuarioDeEntrada(){
        ProntuarioDeEntradaEditar jan =new ProntuarioDeEntradaEditar();
        jan.setVisible(true);
        jan.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    }
    public void exlcuirProntuarioDeEntrada(){
        ProntuarioDeEntradaExcluir jan = new ProntuarioDeEntradaExcluir();
        jan.setVisible(true);
        jan.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    }
    
    public void addProntuarioDeSaida(){
        ProntuarioDeSaidaCadastro jan = new ProntuarioDeSaidaCadastro();
        jan.setVisible(true);
        jan.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    }
    public void editProntuarioDeSaida(){
        ProntuarioDeSaidaEditar jan = new ProntuarioDeSaidaEditar();
        jan.setVisible(true);
        jan.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    }
    public void excluirProntuarioDeSaida(){
        ProntuarioDeSaidaExcluir jan = new ProntuarioDeSaidaExcluir();
        jan.setVisible(true);
        jan.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    }

    public void atualizaTabelaCliente() throws SQLException {
        listaCliente = new ArrayList<Cliente>();
        listaCliente = ClienteDao.getCliente();
        try {
            String[] columnNames = {"CÃ³digo", "Nome", "CPF", "Telefone", "Email", "Endereco"};
            DefaultTableModel model = (DefaultTableModel) jTablePrincipal.getModel();
            model.setRowCount(0);
            model.setColumnCount(6);
            model.setColumnIdentifiers(columnNames);
            if (!listaCliente.isEmpty()) {
                for (Cliente cli : listaCliente) {
                    String[] postagem = {
                        String.valueOf(cli.getId()),
                        cli.getNome(),
                        cli.getCpf(),
                        cli.getTelefone(),
                        cli.getEmail(),
                        cli.getEndereco()
                    };
                    model.addRow(postagem);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Nao conseguimos receber informaÃ§Ãµes.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }

    }

    public void atualizaTabelaAnimal() throws SQLException {
        listaAnimal = new ArrayList<Animal>();
        listaAnimal = AnimalDao.getAnimal();
        try {
            String[] columnNames = {"CÃ³digo", "RaÃ§a", "Nome", "Idade", "Ficha de Vacinas", "Sexo", "CÃ³digo do Cliente"};
            DefaultTableModel model = (DefaultTableModel) jTablePrincipal.getModel();
            model.setRowCount(0);
            model.setColumnCount(6);
            model.setColumnIdentifiers(columnNames);

            if (!listaAnimal.isEmpty()) {
                for (Animal ani : listaAnimal) {
                    String[] postagem = {
                        String.valueOf(ani.getId()),
                        ani.getRaca(),
                        ani.getNome(),
                        ani.getIdade(),
                        ani.getFicha_de_vacinacao(),
                        ani.getSexo(),
                        String.valueOf(ani.getId_Cliente())
                    };
                    model.addRow(postagem);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }

    }

    public void atualizaTabelaMedico() throws SQLException {
        listaMedico = new ArrayList<>();
        listaMedico = MedicoDao.getMedico();

        try {
            String[] columnNames = {"CÃ³digo", "Nome", "CPF", "CRMV", "Especialidade", "EndereÃ§o"};
            DefaultTableModel model = (DefaultTableModel) jTablePrincipal.getModel();
            model.setRowCount(0);
            model.setColumnCount(6);
            model.setColumnIdentifiers(columnNames);

            if (!listaMedico.isEmpty()) {
                for (Medico med : listaMedico) {

                    String[] postagem = {
                        String.valueOf(med.getId()),
                        med.getNome(),
                        med.getCpf(),
                        med.getCrmv(),
                        med.getEspecializacao(),
                        med.getEndereco()
                    };
                    model.addRow(postagem);

                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    
    public void atualizatabelaProntuariodeEntrada() throws SQLException{
        listaProntuarioDeEntrada = null;
        listaProntuarioDeEntrada = ProntuarioDeEntradaDao.getProntuariodeEntrada();
        
        try {
            String[] columnNames = {"CÃ³digo", "DescriÃ§ao", "Data de Entrada", "Codigo do Animal", "Codigo do Veterinario"};
            DefaultTableModel model = (DefaultTableModel) jTablePrincipal.getModel();
            model.setRowCount(0);
            model.setColumnCount(5);
            model.setColumnIdentifiers(columnNames);

            if (!listaProntuarioDeEntrada.isEmpty()) {
                for (ProntuarioDeEntrada prt : listaProntuarioDeEntrada) {

                    String[] postagem = {
                        String.valueOf(prt.getId()),
                        prt.getDescricao(),
                        prt.getData_de_entrada(),
                        String.valueOf(prt.getId_Animal()),
                        String.valueOf(prt.getId_Veterinario())
                    };
                    model.addRow(postagem);

                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    public void atualizatabelaProntuariodeSaida() throws SQLException{
        listaProntuarioDeSaida = null;
        listaProntuarioDeSaida = ProntuarioDeSaidaDao.getProntuarioDeSaida();
        
        try {
            String[] columnNames = {"CÃ³digo", "Codigo Prontuario de Entrada", "Descicao", "Data de Saida"};
            DefaultTableModel model = (DefaultTableModel) jTablePrincipal.getModel();
            model.setRowCount(0);
            model.setColumnCount(4);
            model.setColumnIdentifiers(columnNames);

            if (!listaProntuarioDeSaida.isEmpty()) {
                for (ProntuarioDeSaida prt : listaProntuarioDeSaida) {

                    String[] postagem = {
                        String.valueOf(prt.getId()),
                        String.valueOf(prt.getIdProntuarioDeEntrada()),
                        prt.getDescicao(),
                        prt.getData_de_saida()
                    };
                    model.addRow(postagem);

                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdicionar;
    private javax.swing.JButton jButtonAnimal;
    private javax.swing.JButton jButtonAtualizarTabela;
    private javax.swing.JButton jButtonCliente;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonMedico;
    private javax.swing.JButton jButtonProntuarioDeEntrada;
    private javax.swing.JButton jButtonProntuarioDeSaida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelIdentificarDeTabela;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePrincipal;
    // End of variables declaration//GEN-END:variables
}
